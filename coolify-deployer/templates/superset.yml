version: '3.8'

services:
  redis:
    image: redis:latest
    container_name: redis-{{USERNAME}}
    restart: always
    volumes:
      - redis:/data
    networks:
      - internal

  db:
    image: postgres:14
    container_name: superset-db-{{USERNAME}}
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: superset
      POSTGRES_PASSWORD: superset
      POSTGRES_DB: superset
    networks:
      - internal

  superset:
    image: apache/superset:latest
    container_name: superset-{{USERNAME}}
    restart: always
    depends_on:
      - db
      - redis
    environment:
      SUPERSET_SECRET_KEY: supersecretkey-{{USERNAME}}
      SQLALCHEMY_DATABASE_URI: postgresql://superset:superset@db:5432/superset
      REDIS_HOST: redis
      REDIS_PORT: 6379
      FLASK_APP: superset
    ports:
      - "8088"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.superset-{{USERNAME}}.rule=Host(`{{SUBDOMAIN}}`)"
      - "traefik.http.routers.superset-{{USERNAME}}.entrypoints=http,https"
      - "traefik.http.routers.superset-{{USERNAME}}.tls=true"
      - "traefik.http.routers.superset-{{USERNAME}}.tls.certresolver=letsencrypt"
      - "traefik.http.services.superset-{{USERNAME}}.loadbalancer.server.port=8088"
    networks:
      - traefik-network
      - internal
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8088/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    # Use custom entrypoint script for initial setup
    volumes:
      - ./superset-init-{{USERNAME}}.sh:/entrypoint.sh
    command: ["/entrypoint.sh"]

volumes:
  db-data:
    name: superset-db-data-{{USERNAME}}
  redis:
    name: superset-redis-{{USERNAME}}

networks:
  traefik-network:
    external: true
  internal:
    name: internal-{{USERNAME}}
